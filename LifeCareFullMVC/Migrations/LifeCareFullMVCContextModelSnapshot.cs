// <auto-generated />
using System;
using LifeCareFullMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LifeCareFullMVC.Migrations
{
    [DbContext(typeof(LifeCareFullMVCContext))]
    partial class LifeCareFullMVCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LifeCareFullMVC.Models.DoctorModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("DoctorModule");
                });

            modelBuilder.Entity("LifeCareFullMVC.Models.LiginModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("LiginModule");
                });

            modelBuilder.Entity("LifeCareFullMVC.Models.PatientModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("doctorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("doctorid");

                    b.ToTable("PatientModule");
                });

            modelBuilder.Entity("LifeCareFullMVC.Models.TestModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("patientid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("patientid");

                    b.ToTable("TestModule");
                });

            modelBuilder.Entity("LifeCareFullMVC.Models.PatientModule", b =>
                {
                    b.HasOne("LifeCareFullMVC.Models.DoctorModule", "doctor")
                        .WithMany()
                        .HasForeignKey("doctorid");

                    b.Navigation("doctor");
                });

            modelBuilder.Entity("LifeCareFullMVC.Models.TestModule", b =>
                {
                    b.HasOne("LifeCareFullMVC.Models.PatientModule", "patient")
                        .WithMany()
                        .HasForeignKey("patientid");

                    b.Navigation("patient");
                });
#pragma warning restore 612, 618
        }
    }
}
